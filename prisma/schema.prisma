generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact   Contact?
  ticket Ticket[]
}

model Contact {
  id        Int @id @default(autoincrement())
  customer  Customer @relation(fields: [customerId], references: [id])
  customerId Int 
  phone     String
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie {
  id        Int @id @default(autoincrement())
  title     String
  runtimeMins Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screening Screening[]
}

model Screening {
  id        Int @id @default(autoincrement())
  movie     Movie @relation(fields: [movieId], references: [id])
  movieId   Int
  screen    Screen @relation(fields: [screenId], references: [id])
  screenId  Int
  startsAt  DateTime 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ticket Ticket[]
}

model Screen {
  id        Int @id @default(autoincrement())
  number    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screening   Screening[]
}

model Ticket {
  id Int @id @default(autoincrement())
  screening    Screening @relation(fields: [screeningId], references: [id])
  screeningId  Int
  customer     Customer @relation(fields: [customerId], references: [id])
  customerId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
